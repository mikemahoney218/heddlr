on:
  push:
    paths:
      - DESCRIPTION
      - LICENSE
      - NEWS.md

name: Write codemeta

jobs:
  render:
    name: Write codemeta
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-
      - name: Install system dependencies
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(c(remotes::system_requirements("ubuntu", "20.04"), "apt-get install -y libgit2-dev"))')
      - name: Install codemetar
        run: |
          install.packages("remotes")
          remotes::install_local(".")
          remotes::install_cran("codemetar")
        shell: Rscript {0}
      - name: Write codemeta
        run: Rscript -e 'codemetar::write_codemeta()'
      - name: Commit results
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git commit codemeta.json -m 'Re-write codemeta.json' || echo "No changes to commit"
          git push origin || echo "No changes to commit"
